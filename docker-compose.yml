version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sidekiq
    command: bundle exec sidekiq
    volumes:
      - .:/app
    depends_on:
      - redis
      - mysql
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_URL: redis://redis:6379/1
      REDIS_DB: 1
      RAILS_MASTER_KEY: e65ccc057c83e6437d1a47aeaba02d1e

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
  
  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: chat_system_production
      MYSQL_USER: chat_system
      MYSQL_PASSWORD: root
      MYSQL_PORT: 3307
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
  
  rails:
    build:
      context: .
      dockerfile: Dockerfile # Path to your Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - redis
      - elasticsearch
      - mysql
    environment:
      RAILS_MASTER_KEY: e65ccc057c83e6437d1a47aeaba02d1e
      MYSQL_DATABASE: chat_system_production
      MYSQL_USER: chat_system
      MYSQL_PASSWORD: root
      MYSQL_HOST: mysql
      REDIS_URL: redis://redis:6379/0
volumes:
  esdata:
  mysql_data:
  redis_data: